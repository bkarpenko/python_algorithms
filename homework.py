#!/usr/bin/env python
# coding: utf-8

import random, string, re

#1 Найти сумму и произведение цифр трехзначного числа, которое вводит пользователь.

n = input("введите 3-х значное число\n")
s = sum(map(int, n))
p = 1
for each in n:
    p *= int(each)
print("сумма чисел =", s, "\nпроизведение чисел =", p)


#4 Написать программу, которая генерирует в указанных пользователем границах: 

#a случайное целое число
n1, n2 = list(map(int, input("введите через пробел нижнюю и верхнюю границы числового диапозона. Используйте целые числа\n").split()))
if n1 > n2:
    n1, n2 = n2, n1
print(random.randint(n1, n2))

#b случайное вещественное число
l = list(map(float, input("введите через пробел нижнюю и верхнюю границы числового диапозона. Используйте вещественные числа\n").split()))
print(random.uniform(l[0], l[1]))

#с случайный символ
a, b = input("введите через пробел границы символьного диапозона. Используйте две любых буквы английского алфавита\n").split()
if a < b:
    a, b = b, a

abc = string.ascii_letters
abc_slice = abc[abc.index(a) : abc.index(b) + 1]

print(random.choice(abc_slice))

# 5 Пользователь вводит две буквы. Определить, на каких местах алфавита они стоят и сколько между ними находится букв
letters = input("введите 2 любые буквы английского алфавита\n")

letters_clean = re.sub("[^A-Za-z]", "", letters)

letter1, letter2 = letters_clean[0], letters_clean[1]

# define alphabet    
abc = string.ascii_letters

print('позиция первого символа: {0}, позиция второго символа: {1}'.format(abc.index(letter1), abc.index(letter2)))

if letter1 > letter2:
    letter1, letter2 = letter2, letter1

letters_between = abc[abc.index(letter1) + 1 : abc.index(letter2)]
    
print("колличество букв между указанными буквами:", len(letters_between))


#6 Пользователь вводит номер буквы в алфавите. Определить, какая это буква.

number = int(input("введите номер буквы английского алфавита в диапозоне от 1 до 26 включительно"))
abc = string.ascii_letters
print("вы ввели букву", abc[number - 1])


# 9 Вводятся три разных числа. Найти, какое из них является средним (больше одного, но меньше другого)

a, b, c = list(map(int, input("введите 3 разных числа через пробел\n").split()))

if b < a < c or c < a < b:
    print(a, "является средним из 3-х чисел")
    
elif a < b < c or c < b < a:
    print(b, "является средним из 3-х чисел") 
    
elif a < c < b or c < c < a:
    print(c, "является средним из 3-х чисел") 

# 8. Определить, является ли год, который ввел пользователем, високосным или невисокосным.

year = int(input("введите год\n"))
if year % 400 == 0:
    print("Високосный")
else:
    if year % 4 == 0 and year % 100 > 0:
        print("Високосный")
    else:
        print("Обычный")


# 7. По длинам трех отрезков, введенных пользователем, определить возможность существования треугольника, составленного из этих отрезков. Если такой треугольник существует, то определить, является ли он разносторонним, равнобедренным или равносторонним.

ac, bc, ab = list(map(int, input("введите через пробел величины 3-х отрезков треугольника\n").split()))

if ac < bc:
    ac, bc = bc, ac

# when triangle exists
if  (ac - bc) < ab < (ac + bc):
    if ac == bc and ac == ab:
        print("треугольник равносторонний")
    elif ac == bc or ac == ab or bc == ab:
        print("треугольник равнобедренный")
    else:
        print("треугольник разносторонний")

# when triangle doesn't exist
else:
    print("треугольник с указаннами параметрами не существует")


#3 По введенным пользователем координатам двух точек вывести уравнение прямой вида y=kx+b, проходящей через эти точки.

x1 = float(input("Input x1: "))
y1 = float(input("Input y1: "))

x2 = float(input("Input x2: "))
y2 = float(input("Input y2: "))

# y1 - y2== kx1 - kx2

k = (y1 - y2) / (x1 - x2)
b = y1 - k * x1

print(f"y={k}x+{b}")


#4 Выполнить логические побитовые операции «И», «ИЛИ» и др. над числами 5 и 6. Выполнить над числом 5 побитовый сдвиг вправо и влево на два знака. Объяснить полученный результат.

# "&" применяет логический оператор "и" побитово - 1 сравнивается с 0, 0 с 1, 1 с 1. Получается 100, т.е. 4 в десятичной
print(5 & 6) 

# логика та же, но применяется оператор "или". Каждое сравнение дает 1, получается 111 или 7 в десятичной
print(5 | 6)

# если сумма битов четная, получается 1, если нечетная - 0. 1+0 = 1, 0+1 = 1, 1+1 = 0, итого 010 или 3
print(5 ^ 6)

# сдвигает биты числа вправо. Справа обрезаются биты. 101 становится 1
print(5 >> 2)
#сдвигает биты числа влево. В итоге справа появляются новые нулевые биты. Число 101 становится 10100, т.е 20 в десятичной
print(5 << 2)